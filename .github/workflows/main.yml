name: Edu-Connect CI CD Pipeline
on:
  push:
    branches: [ "main" ]
    paths:
      - 'Config-service/**'
      - 'Discovery/**'
      - 'Student/**'
      - 'Teacher/**'
      - 'Video/**'
      - 'Gateway-Service/**'
      - 'Security_Microservice/**'
      - 'Cour/**'
      - 'docker-compose.yml'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
            java-version: '17'
            distribution: 'temurin'
            cache: 'maven'
            cache-dependency-path: '**/pom.xml'  

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

       
    - name: Build all services with Maven
      run: |
        for dir in Config-service Discovery Student Teacher Video Gateway-Service Security_Microservice Cour; do
          if [ -f "$dir/pom.xml" ]; then
            echo "Building $dir"
            cd $dir
            mvn clean package -DskipTests
            cd ..
          fi
        done


    - name: SonarCloud Scan for Edu-Connect Project
      run: |
         for dir in Config-service Discovery Student Teacher video-test Gateway-Service Security_Microservice Cour; do
           if [ -f "$dir/pom.xml" ]; then
             echo "Running SonarCloud scan for $dir"
             cd $dir
             mvn sonar:sonar \
               -Dsonar.projectKey=mohamed-alaoui6_edu-connect-ci-cd \
                -Dsonar.organization=mohamed-alaoui6 \
               -Dsonar.host.url=https://sonarcloud.io \
               -Dsonar.sources=src/main/java \
               -Dsonar.tests=src/test/java \
               -Dsonar.java.binaries=target/classes \
               -Dsonar.test.inclusions=**/*Test*.java \
               -Dsonar.login=${{ secrets.SONARTOKEN }}
             cd ..
           fi
         done




   
    - name: Build Docker images
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      run: docker compose up -d

     
    - name: Run Trivy Scan with Retry
      run: |
        for service in discovery student teacher video gateway-service security_microservice cour; do
          for i in {1..3}; do
            echo "Scanning image: ${{ secrets.DOCKERHUB_USERNAME }}/$service:latest (Attempt $i)"
            docker run --rm \
              -v /var/run/docker.sock:/var/run/docker.sock \
              -v /tmp/trivy-cache:/root/.cache/trivy \
              aquasec/trivy:latest image \
              --exit-code 1 \
              --severity HIGH,CRITICAL \
              ${{ secrets.DOCKERHUB_USERNAME }}/$service:latest && break || sleep 60
          done
        done


    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker images
      run: |
        for service in discovery student teacher video gateway-service security_microservice cour; do
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$service:latest
        done
